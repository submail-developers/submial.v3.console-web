/**
* 未被使用的className会被treeShaking,不会被打包,大胆添加样式
* fn(10,30) 字号
* g-ellipsis-(1,5) 超出几行显示...
* g-radius-(0,20|50) 生成圆角；0-20每增加 1 为一个className;50表示50%
* g-rotate-(0,360) 旋转，每增加 15 为一个className
* g-scale-(5,200|200,1000) 小于100缩小，大于100放大;5-200每增加 5 为一个className;300-100每增加 100 为一个className
* g-transition-(50,3000) 开启动画，单位毫秒；每 50 增加一个className
* 
* fw-500
* w-100
* h-100
* hide-scrollbar 隐藏滚动条
* 
* 
*/

/**
* fn(10,30) 字号(10-30)
*/
@mixin create-fn() {
  @for $i from 10 through 30 {
    $value: $i + px;
    .fn#{$i} {
      font-size: $value;
    }
  }
}
@include create-fn();

/**
* g-ellipsis-(1,5) 超出几行显示...
* g-ellipsis == g-ellipsis-1
*/
@mixin create-ellipsis() {
  @for $i from 1 through 5 {
    .g-ellipsis {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
    .g-ellipsis-#{$i} {
      overflow: hidden;
      text-overflow: ellipsis;
      display: -webkit-box;
      -webkit-line-clamp: $i;
      line-clamp: $i;
      -webkit-box-orient: vertical;
      word-break: break-all;
    }
  }
}
@include create-ellipsis();

/**
* g-radius-(0,20/50) 生成圆角
*/
@mixin create-radius() {
  @for $i from 0 through 20 {
    $value: $i + px;
    .g-radius-#{$i} {
      border-radius: $value;
    }
  }
  .g-radius-50 {
    border-radius: 50%;
  }
}
@include create-radius();

/**
* 旋转 0-360 每个增加15deg
*/
@mixin create-rotate() {
  @for $i from 0 through 24 {
    $number: $i * 15;
    $value: $number + deg;
    .g-rotate-#{$number} {
      transform: rotate($value);
    }
  }
}
@include create-rotate();

/**
* 放大/缩小 g-scale-(0,200|200,1000) 小于100为缩小，大于100为放大
*/
@mixin create-scale() {
  // 倍数(0.05,0.1,...2)
  @for $i from 1 through 40 {
    $number: $i * 5;
    $value: $number * 0.01;
    .g-scale-#{$number} {
      transform: scale($value);
    }
  }
  // 倍数(3,4,...10)
  @for $i from 3 through 10 {
    $number: $i * 100;
    .g-scale-#{$number} {
      transform: scale($i);
    }
  }
}
@include create-scale();

/**
* 开启动画 50-3000ms 每个增加50ms
* g-transition-300
*/
@mixin create-transition() {
  @for $i from 1 through 60 {
    $number: $i * 50;
    $value: $number + ms;
    .g-transition-#{$number} {
      transition: all $value ease;
    }
  }
}
@include create-transition();

.g-pointer {
  cursor: pointer;
}

.fw-500 {
  font-weight: 500;
}
.w-100 {
  width: 100%;
}
.h-100 {
  height: 100%;
}
.w-0 {
  width: 0;
}
.h-0 {
  height: 0;
}

// 隐藏滚动条
.hide-scrollbar {
  &::-webkit-scrollbar {
    display: none;
  }
  scrollbar-width: none;
  overflow: -moz-scrollbars-none;
  scrollbar-color: transparent transparent;
}

//
.hover-link {
  .icon {
    transform: scale(1) rotate(270deg) translateY(0);
    transition: all 0.3s ease;
    display: inline-block;
  }
  &:hover {
    .icon {
      transform: scale(1.1) rotate(270deg) translateY(1px);
    }
  }
}

div {
  box-sizing: border-box;
}
